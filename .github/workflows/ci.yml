name: Publisher
on: 
    push:
        branches: ['main', 'master']

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, '[PUBLISHER]')
    outputs:
      changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
      length-files: ${{ steps.lg_out.outputs.lg_files }}
      page_link : ${{ steps.lg_out.outputs.page_link }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: get changed files
        uses: tj-actions/changed-files@v23
        id: changed-files
        with:
          separator: ";;;"
          quotepath: "false"
          since_last_remote_commit: "true"
      - name: set lg outputs
        id: lg_out
        run: |
          changed="${{ steps.changed-files.outputs.all_changed_files }}"
          lg_steps=${#changed}
          LINK=$(head -n 1 .github/env.txt)
          echo "$changed"
          echo "$lg_steps"
          echo "::set-output name=lg_files::$lg_steps"
          echo "::set-output name=page_link::$LINK"
  installation: 
    runs-on: ubuntu-latest
    needs: [build]
    if:  needs.build.outputs.length-files > 0 
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Requirements
        run: |
          pip install -r requirements.txt
      - name: generate markdown
        run: |
          echo "File processed:  " >> $GITHUB_STEP_SUMMARY
      - name: obs2mk source files
        run: |
          IFS=$';;;'
          changed="${{ needs.build.outputs.changed-files }}"
          for file in $changed; do
            if [[ "$file" == *md ]] 
              then
                echo "- $file" >> $GITHUB_STEP_SUMMARY
                obs2mk --minimal file "$file"
              fi
            done
          unset IFS
      - name: Push updated files
        continue-on-error: true
        run: |
          git pull
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          rm -rf ./site/
          git add . 
          fileList=$(git status --porcelain | tr -d '\n' | tr -d 'M' |tr -d '??')
          git commit -m "🏓 Publishing from ObsidianMD" -m "${fileList}"
          git push
  on_failure:
    runs-on: ubuntu-latest
    needs: [installation, build]
    if: always() && (needs.installation.result == 'failure')
    steps: 
      - name: Ending summary
        run: |
          echo "⚠️ Error during build!!!" >> $GITHUB_STEP_SUMMARY
  on_success:
    runs-on: ubuntu-latest
    needs: [installation, build]
    if: always() && (needs.installation.result == 'success')
    steps:
      - name: ending summary
        run: |
          link="${{ needs.build.outputs.page_link }}"
          echo "🎉 Successfully converted files and build documentation" >> $GITHUB_STEP_SUMMARY
          echo "Your blog is successfully build at $link" >> $GITHUB_STEP_SUMMARY
  on_nothing:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.length-files == 0
    steps:
      - name: message
        run: |
          echo "${{ needs.build.outputs.all_changed_files }}"
          echo "🤔 Nothing to commit, ending" >> $GITHUB_STEP_SUMMARY 
