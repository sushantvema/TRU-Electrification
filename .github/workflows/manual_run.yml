name: Publisher Manual
on: 
  workflow_dispatch:
    inputs:
      file:
        type: string
        description: File to convert by OBS2MK, glob pattern are supported (needed to convert a folder contents!)
        required: true

jobs:
  get_file:
    runs-on: ubuntu-latest
    outputs:
      localized: ${{ steps.locate_file.outputs.localized }}
      nb_file: ${{ steps.locate_file.outputs.nb_file }}
    steps:
      - uses: actions/checkout@v3
      - name: locate file
        id: locate_file
        run: |
          files=$(find -path "${{ github.event.inputs.file }}" -printf "%p;;;")
          nb=${#files}
          echo "found $files"
          echo "::set-output name=localized::$files"
          echo "::set-output name=nb_file::$nb"
  conversion:
    runs-on: ubuntu-latest
    needs: [get_file]
    if: needs.get_file.outputs.nb_file > 0
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: 'pip'  
      - name: requirements
        run: |
          pip install -r requirements.txt
      - name: obs2mk
        run: |
          echo "found ${{ needs.get_file.outputs.localized }}"
          files="${{ needs.get_file.outputs.localized }}"
          nb_convert=0
          IFS=$";;;"
          for file in $files; do
            if [[ "$file" == *md ]] ; then
                echo "- $file" >> $GITHUB_STEP_SUMMARY
                obs2mk --minimal file "$file"
                nb_convert=$((nb_convert+1))
            fi
          done
          unset IFS
          echo "OBS2MK convert successfully $nb_convert files!" >> $GITHUB_STEP_SUMMARY
      - name: mkdocs build
        run: |
            mkdocs gh-deploy --force --clean
            LINK=$(head -n 1 .github/env.txt)
            echo "[Blog online !]($LINK)" >> $GITHUB_STEP_SUMMARY
      - name: push change
        continue-on-error: true
        run: |
          git pull
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          rm -rf ./site/
          git add . 
          fileList=$(git status --porcelain | tr -d '\n' | tr -d 'M' |tr -d '??')
          git commit -m "🏓 Publishing from ObsidianMD" -m "${fileList}"
          git push
  on_nothing:
    runs-on: ubuntu-latest
    needs: [get_file]
    if: needs.get_file.outputs.nb_file == 0
    steps:
      - name: message
        run: |
          echo "No file found with given input: ${{ github.event.inputs.file }}" >> $GITHUB_STEP_SUMMARY
      

        



            




